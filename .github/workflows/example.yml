name: strategic-prompter-demo-ci

on:
  push:
    branches: [dev]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Lint Check
        run: |
          # Add your linting commands here
          # For example, using ktlint for Kotlin
          ./gradlew ktlintCheck

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build and test
        run: |
          ./gradlew clean build
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-artifacts
          path: build/libs/*.jar

  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Coverage Report
        run: |
          # Add your coverage reporting commands here
          # For example, generating coverage reports with JaCoCo
          ./gradlew jacocoTestReport

  deploy:
    needs: [lint, test, coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: spring-boot-artifacts
          path: build/libs

      - name: Deploy to server
        run: |
          # Add your deployment script here
          # For example, you can use SSH to deploy to your server
          # Replace SERVER_IP and SSH_KEY with your server details
          ssh -i ${{ secrets.SSH_KEY }} user@SERVER_IP "mkdir -p /path/to/deploy"
          scp -i ${{ secrets.SSH_KEY }} build/libs/*.jar user@SERVER_IP:/path/to/deploy
